import Link from 'next/link';
import { Form } from 'app/form';
import { signIn } from 'app/auth';
import { SubmitButton } from 'app/submit-button';
import bgImageLogin from '../../public/images/bgImageLogin.jpeg';
import Image from 'next/image';

export default function Login() {
  return (
    <div className="flex h-screen w-screen items-center justify-center bg-background">
      <Image
        alt="bg"
        // Importing an image will
        // automatically set the width and height
        src={bgImageLogin}
        sizes="cover"
        // Make the image display full width
        fill
        quality={100}
      />
      <div className="z-10 w-full max-w-md items-center overflow-hidden rounded-2xl border border-gray-100 shadow-xl">
        <div className="ml-9 w-full items-center justify-center align-middle">
          {/* biome-ignore lint/a11y/noSvgWithoutTitle: <explanation> */}
          <svg
            width="365"
            height="87"
            viewBox="0 0 365 87"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M26.0246 26.4561L3.65534 57.7994C2.23815 59.7851 3.65766 62.5421 6.09723 62.5421H11.5266C12.1755 62.5421 12.7842 62.2272 13.1591 61.6975L27.6381 41.2385L41.9538 61.689C42.3281 62.2237 42.9396 62.5421 43.5923 62.5421H49.6097C52.0608 62.5421 53.4775 59.7619 52.0367 57.7788L29.2706 26.4424C28.4678 25.3373 26.818 25.3443 26.0246 26.4561Z"
              fill="#F3B930"
            />
            <path
              d="M90.4413 57.709C89.4173 58.733 88.244 59.5863 86.9213 60.269C85.5986 60.9517 84.1693 61.4637 82.6333 61.805C81.14 62.1463 79.5613 62.317 77.8973 62.317C74.3133 62.317 71.092 61.5277 68.2333 59.949C65.4173 58.3703 63.1773 56.2157 61.5133 53.485C59.892 50.7543 59.0813 47.661 59.0813 44.205C59.0813 40.749 59.892 37.677 61.5133 34.989C63.1773 32.2583 65.4173 30.1037 68.2333 28.525C71.092 26.9463 74.3133 26.157 77.8973 26.157C80.372 26.157 82.676 26.541 84.8093 27.309C86.9853 28.077 88.8626 29.229 90.4413 30.765L89.6733 31.661C88.0093 30.125 86.196 29.037 84.2333 28.397C82.2706 27.7143 80.1586 27.373 77.8973 27.373C74.5693 27.373 71.5826 28.1197 68.9373 29.613C66.292 31.0637 64.2013 33.069 62.6653 35.629C61.1293 38.1463 60.3613 41.005 60.3613 44.205C60.3613 47.3623 61.1293 50.221 62.6653 52.781C64.2013 55.341 66.292 57.3677 68.9373 58.861C71.5826 60.3117 74.5693 61.037 77.8973 61.037C80.1586 61.037 82.292 60.717 84.2973 60.077C86.3026 59.3943 88.0946 58.2637 89.6733 56.685L90.4413 57.709ZM89.2253 57.709V44.525H90.4413V57.709H89.2253ZM105.703 43.373H125.927V44.589H105.703V43.373ZM106.023 60.909H128.999V62.125H104.743V26.349H128.231V27.565H106.023V60.909ZM140.493 62.125V26.349H141.581L168.525 60.589H167.885V26.349H169.165V62.125H168.077L141.133 27.885H141.773V62.125H140.493ZM184.805 62.125V26.349H198.629C202.64 26.349 206.053 27.117 208.869 28.653C211.728 30.189 213.925 32.301 215.461 34.989C216.997 37.677 217.765 40.749 217.765 44.205C217.765 47.661 216.997 50.7543 215.461 53.485C213.925 56.173 211.728 58.285 208.869 59.821C206.053 61.357 202.64 62.125 198.629 62.125H184.805ZM186.085 60.909H198.501C202.341 60.909 205.605 60.1837 208.293 58.733C210.981 57.2823 213.008 55.2983 214.373 52.781C215.781 50.2637 216.485 47.405 216.485 44.205C216.485 41.005 215.781 38.1463 214.373 35.629C213.008 33.1117 210.981 31.149 208.293 29.741C205.605 28.2903 202.341 27.565 198.501 27.565H186.085V60.909ZM221.323 62.125L238.091 26.349H239.371L256.203 62.125H254.731L238.475 27.309H239.051L222.731 62.125H221.323ZM227.147 51.309L227.723 50.093H249.739L250.315 51.309H227.147ZM272.352 62.125L256.032 26.349H257.504L273.312 61.165H272.672L288.48 26.349H289.952L273.632 62.125H272.352ZM289.761 62.125L306.529 26.349H307.809L324.641 62.125H323.169L306.913 27.309H307.489L291.169 62.125H289.761ZM295.585 51.309L296.161 50.093H318.177L318.753 51.309H295.585ZM346.83 62.317C343.289 62.317 340.11 61.5277 337.294 59.949C334.478 58.3703 332.26 56.2157 330.638 53.485C329.017 50.7543 328.206 47.661 328.206 44.205C328.206 40.749 329.017 37.677 330.638 34.989C332.26 32.2583 334.478 30.1037 337.294 28.525C340.11 26.9463 343.289 26.157 346.83 26.157C349.22 26.157 351.481 26.541 353.614 27.309C355.79 28.077 357.668 29.229 359.246 30.765L358.478 31.661C356.857 30.125 355.065 29.037 353.102 28.397C351.14 27.7143 349.049 27.373 346.83 27.373C343.545 27.373 340.58 28.1197 337.934 29.613C335.332 31.0637 333.262 33.069 331.726 35.629C330.233 38.1463 329.486 41.005 329.486 44.205C329.486 47.3623 330.233 50.221 331.726 52.781C333.262 55.341 335.332 57.3677 337.934 58.861C340.58 60.3117 343.545 61.037 346.83 61.037C349.049 61.037 351.14 60.717 353.102 60.077C355.065 59.3943 356.857 58.285 358.478 56.749L359.246 57.645C357.668 59.181 355.79 60.3543 353.614 61.165C351.481 61.933 349.22 62.317 346.83 62.317Z"
              fill="white"
            />
          </svg>
        </div>
        <div className="flex flex-col items-center justify-center space-y-3 border-b border-gray-200 bg-white px-4 py-6 pt-8 text-center sm:px-16">
          <h3 className="text-xl font-semibold">Sign In</h3>
          <p className="text-sm text-gray-500">
            Use your email and password to sign in
          </p>
        </div>
        <Form
          action={async (formData: FormData) => {
            'use server';
            await signIn('credentials', {
              redirectTo: '/dashboard',
              email: formData.get('email') as string,
              password: formData.get('password') as string,
            });
          }}
        >
          <SubmitButton>Sign in</SubmitButton>
          <p className="text-center text-sm text-gray-600">
            {"Don't have an account? "}
            <Link href="/register" className="font-semibold text-gray-800">
              Sign up 2
            </Link>
            {' for free.'}
          </p>
        </Form>
      </div>
    </div>
  );
}
